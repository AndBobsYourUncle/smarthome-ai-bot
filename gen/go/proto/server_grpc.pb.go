// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: proto/server.proto

package smarthome_ai_bot_apiv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SmarthomeAIBotAPIClient is the client API for SmarthomeAIBotAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SmarthomeAIBotAPIClient interface {
	SendPrompt(ctx context.Context, in *SendPromptRequest, opts ...grpc.CallOption) (*SendPromptResponse, error)
}

type smarthomeAIBotAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewSmarthomeAIBotAPIClient(cc grpc.ClientConnInterface) SmarthomeAIBotAPIClient {
	return &smarthomeAIBotAPIClient{cc}
}

func (c *smarthomeAIBotAPIClient) SendPrompt(ctx context.Context, in *SendPromptRequest, opts ...grpc.CallOption) (*SendPromptResponse, error) {
	out := new(SendPromptResponse)
	err := c.cc.Invoke(ctx, "/smarthome_ai_bot_api.v1.SmarthomeAIBotAPI/SendPrompt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmarthomeAIBotAPIServer is the server API for SmarthomeAIBotAPI service.
// All implementations should embed UnimplementedSmarthomeAIBotAPIServer
// for forward compatibility
type SmarthomeAIBotAPIServer interface {
	SendPrompt(context.Context, *SendPromptRequest) (*SendPromptResponse, error)
}

// UnimplementedSmarthomeAIBotAPIServer should be embedded to have forward compatible implementations.
type UnimplementedSmarthomeAIBotAPIServer struct {
}

func (UnimplementedSmarthomeAIBotAPIServer) SendPrompt(context.Context, *SendPromptRequest) (*SendPromptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPrompt not implemented")
}

// UnsafeSmarthomeAIBotAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SmarthomeAIBotAPIServer will
// result in compilation errors.
type UnsafeSmarthomeAIBotAPIServer interface {
	mustEmbedUnimplementedSmarthomeAIBotAPIServer()
}

func RegisterSmarthomeAIBotAPIServer(s grpc.ServiceRegistrar, srv SmarthomeAIBotAPIServer) {
	s.RegisterService(&SmarthomeAIBotAPI_ServiceDesc, srv)
}

func _SmarthomeAIBotAPI_SendPrompt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPromptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmarthomeAIBotAPIServer).SendPrompt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smarthome_ai_bot_api.v1.SmarthomeAIBotAPI/SendPrompt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmarthomeAIBotAPIServer).SendPrompt(ctx, req.(*SendPromptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SmarthomeAIBotAPI_ServiceDesc is the grpc.ServiceDesc for SmarthomeAIBotAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SmarthomeAIBotAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "smarthome_ai_bot_api.v1.SmarthomeAIBotAPI",
	HandlerType: (*SmarthomeAIBotAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPrompt",
			Handler:    _SmarthomeAIBotAPI_SendPrompt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/server.proto",
}
